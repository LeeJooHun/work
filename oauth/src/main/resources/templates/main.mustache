<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" type="text/css" href="/css/calendar.css">
    <title>Document</title>
</head>
<body>
<div class="wrapper">
    <header>
        <div class="nav">
            <button class="material-icons" id="prev"> &lt; </button>
            <p class="current-date"></p>
            <button class="material-icons" id="next"> &gt; </button>
        </div>
    </header>
    <div class="calendar">
        <ul class="weeks">
            <li>Sun</li>
            <li>Mon</li>
            <li>Tue</li>
            <li>Wed</li>
            <li>Thu</li>
            <li>Fri</li>
            <li>Sat</li>
        </ul>
        <ul class="days">

        </ul>
    </div>
</div>
<script>
    const months = [
        'January', 'February', 'March', 'April', 'May', 'June',
        'July', 'August', 'September', 'October', 'November', 'December'
    ];

    let date = new Date();
    let currYear = date.getFullYear(),
            currMonth = date.getMonth();

    const currentDate = document.querySelector('.current-date');

    const renderCalendar = () => {
        currentDate.innerHTML = `${months[currMonth]} ${currYear}`;
        let lastDateOfMonth = new Date(currYear, currMonth + 1, 0).getDate();
        const daysTag = document.querySelector('.days');

        let liTag = '';
        let firstDayOfMonth = new Date(currYear, currMonth, 1).getDay();
        let lastDayOfMonth = new Date(currYear, currMonth, lastDateOfMonth).getDay();
        let lastDateOfLastMonth = new Date(currYear, currMonth, 0).getDate();

        for (let i = firstDayOfMonth; i > 0; i--) {
            liTag += `<li class="inactive">${lastDateOfLastMonth - i + 1}</li>`;
        }
        
        for (let i = 1; i <= lastDateOfMonth; i++) {
            let isToday =
                    i === date.getDate() &&
                    currMonth === new Date().getMonth() &&
                    currYear === new Date().getFullYear()
                            ? 'active'
                            : '';
            liTag += `<li class="${isToday}">${i}</li>`;
        }

        for (let i = lastDayOfMonth; i < 6; i++) {
            liTag += `<li class="inactive">${i - lastDayOfMonth + 1}</li>`;
        }



        daysTag.innerHTML = liTag;

    };

    renderCalendar();

    const prevNextIcon = document.querySelectorAll('.material-icons'); // 이 부분 추가

    prevNextIcon.forEach((icon) => {
        icon.addEventListener('click', () => {
            currMonth = icon.id === 'prev' ? currMonth - 1 : currMonth + 1;
            if (currMonth < 0 || currMonth > 11) {
                date = new Date(currYear, currMonth);
                currYear = date.getFullYear();
                currMonth = date.getMonth();
            } else {
                date = new Date();
            }
            renderCalendar();
        });
    });

</script>
</body>
</html>
